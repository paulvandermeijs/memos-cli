/*
 * Memos API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1WorkspaceProfile {
    #[serde(rename = "owner", skip_serializing_if = "Option::is_none")]
    pub owner: Option<String>,
    #[serde(rename = "version", skip_serializing_if = "Option::is_none")]
    pub version: Option<String>,
    /// mode is the instance mode (e.g. \"prod\", \"dev\" or \"demo\").
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<String>,
    /// instance_url is the URL of the instance.
    #[serde(rename = "instanceUrl", skip_serializing_if = "Option::is_none")]
    pub instance_url: Option<String>,
}

impl V1WorkspaceProfile {
    pub fn new() -> V1WorkspaceProfile {
        V1WorkspaceProfile {
            owner: None,
            version: None,
            mode: None,
            instance_url: None,
        }
    }
}

