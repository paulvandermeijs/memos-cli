/*
 * Memos API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Apiv1WorkspaceStorageSetting {
    #[serde(rename = "storageType", skip_serializing_if = "Option::is_none")]
    pub storage_type: Option<models::Apiv1WorkspaceStorageSettingStorageType>,
    #[serde(rename = "filepathTemplate", skip_serializing_if = "Option::is_none")]
    pub filepath_template: Option<String>,
    /// The max upload size in megabytes.
    #[serde(rename = "uploadSizeLimitMb", skip_serializing_if = "Option::is_none")]
    pub upload_size_limit_mb: Option<String>,
    #[serde(rename = "s3Config", skip_serializing_if = "Option::is_none")]
    pub s3_config: Option<Box<models::WorkspaceStorageSettingS3Config>>,
}

impl Apiv1WorkspaceStorageSetting {
    pub fn new() -> Apiv1WorkspaceStorageSetting {
        Apiv1WorkspaceStorageSetting {
            storage_type: None,
            filepath_template: None,
            upload_size_limit_mb: None,
            s3_config: None,
        }
    }
}

