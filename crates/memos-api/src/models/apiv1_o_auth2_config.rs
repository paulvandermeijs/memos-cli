/*
 * Memos API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Apiv1OAuth2Config {
    #[serde(rename = "clientId", skip_serializing_if = "Option::is_none")]
    pub client_id: Option<String>,
    #[serde(rename = "clientSecret", skip_serializing_if = "Option::is_none")]
    pub client_secret: Option<String>,
    #[serde(rename = "authUrl", skip_serializing_if = "Option::is_none")]
    pub auth_url: Option<String>,
    #[serde(rename = "tokenUrl", skip_serializing_if = "Option::is_none")]
    pub token_url: Option<String>,
    #[serde(rename = "userInfoUrl", skip_serializing_if = "Option::is_none")]
    pub user_info_url: Option<String>,
    #[serde(rename = "scopes", skip_serializing_if = "Option::is_none")]
    pub scopes: Option<Vec<String>>,
    #[serde(rename = "fieldMapping", skip_serializing_if = "Option::is_none")]
    pub field_mapping: Option<Box<models::Apiv1FieldMapping>>,
}

impl Apiv1OAuth2Config {
    pub fn new() -> Apiv1OAuth2Config {
        Apiv1OAuth2Config {
            client_id: None,
            client_secret: None,
            auth_url: None,
            token_url: None,
            user_info_url: None,
            scopes: None,
            field_mapping: None,
        }
    }
}

