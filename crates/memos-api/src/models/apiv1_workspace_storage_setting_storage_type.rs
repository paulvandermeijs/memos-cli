/*
 * Memos API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// Apiv1WorkspaceStorageSettingStorageType :  - DATABASE: DATABASE is the database storage type.  - LOCAL: LOCAL is the local storage type.  - S3: S3 is the S3 storage type.
///  - DATABASE: DATABASE is the database storage type.  - LOCAL: LOCAL is the local storage type.  - S3: S3 is the S3 storage type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Apiv1WorkspaceStorageSettingStorageType {
    #[serde(rename = "STORAGE_TYPE_UNSPECIFIED")]
    StorageTypeUnspecified,
    #[serde(rename = "DATABASE")]
    Database,
    #[serde(rename = "LOCAL")]
    Local,
    #[serde(rename = "S3")]
    S3,

}

impl std::fmt::Display for Apiv1WorkspaceStorageSettingStorageType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::StorageTypeUnspecified => write!(f, "STORAGE_TYPE_UNSPECIFIED"),
            Self::Database => write!(f, "DATABASE"),
            Self::Local => write!(f, "LOCAL"),
            Self::S3 => write!(f, "S3"),
        }
    }
}

impl Default for Apiv1WorkspaceStorageSettingStorageType {
    fn default() -> Apiv1WorkspaceStorageSettingStorageType {
        Self::StorageTypeUnspecified
    }
}

